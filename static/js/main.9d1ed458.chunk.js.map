{"version":3,"sources":["Landing.js","data.js","CharacterInfoCard.js","Search.js","Filter.js","Universe.js","Characters.js","CompareItem.js","Compare.js","StagesCards.js","Stages.js","App.js","serviceWorker.js","index.js"],"names":["clouds","i","push","concat","Landing","countDownDate","Date","getTime","timer","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","document","getElementById","innerHTML","clearInterval","_this","this","props","showLanding","react_default","a","createElement","className","map","cloud","key","src","onClick","toggleLanding","id","onLoad","runCountdown","Component","categories","name","key1","key2","cardCategories","cardProsCons","letterSuperScripts","num","script","CharacterInfoCard","rank","superScript","find","numArray","Object","toConsumableArray","toString","console","log","parseInt","join","length","character","universe","tier","type","data","icon","images","large","category","toLowerCase","addSuperScript","item","href","smash_wiki","target","scrollCard","e","removeCard","Search","onKeyUp","search","value","placeholder","suggestions","suggestion","parentElement","previousElementSibling","innerText","Filter","onChange","filterByUniverse","universes","Universe","replace","Characters","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","searchInput","filteredCharacters","state","characterList","filter","toUpperCase","includes","querySelector","setState","characters","setIndex","trie","suggest","newNum","currentCharacter","index","card","classList","contains","Trie","_this2","fetch","then","response","json","populate","dataset","forEach","compare","speeds","run_speed","air_speed","initial_dash","speed_rank","catch","error","array","filteredUniverses","indexOf","_this3","src_Search","src_Filter","distillUniverses","src_Universe","selectCharacter","style","backgroundImage","src_CharacterInfoCard","CompareRow","row","small_icon","highlight","Compare","up","rotate","sortKey","sortKey2","sortedData","sortDown","sortUp","sort","b","reverse","sortTable","even","counter","CompareItem","StagesCards","stage","stage_image","keys","scrollStageCard","Stages","stages","currentStage","filteredStages","stageList","selectStage","src_StagesCards","App","renderSection","section","defineProperty","show","landing","src_Landing","renderCharacters","src_Characters","src_Stages","src_Compare","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d1ed458.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './styles/main.scss';\n\nconst clouds = [];\n\nfor (let i = 1; i <= 16; i++) {\n  clouds.push(`cloud${i}`);\n}\n\nclass Landing extends Component {\n\nrunCountdown() {\n    let countDownDate = new Date(\"Dec 7, 2018 22:00:00\").getTime();\n    let timer = setInterval(function() {\n    let now = new Date().getTime();\n    let distance = countDownDate - now;\n    let days = Math.floor(distance / (1000 * 60 * 60 * 24));\n    let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n    let seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n    if (!document.getElementById(\"timer\")) {\n      return;\n    }\n    document.getElementById(\"timer\").innerHTML = days + \"D \" + hours + \"H \"\n    + minutes + \"M \" + seconds + \"S \";\n    if (distance < 0) {\n      clearInterval(timer);\n      document.getElementById(\"demo\").innerHTML = \"EXPIRED\";\n    }\n  }, 1000);\n}\n\n\nrender() {\n    if (this.props.showLanding) {\n      return (\n        <div className='landing-page'>\n          <div className='action-container'>\n            {\n              clouds.map( (cloud, i) => {\n                return  <img className={`${cloud} cloud`} \n                  key={i} \n                  src={`./images/general/${cloud}.png`} />;\n              })\n            }\n            <img className='smash-logo' \n              src='./images/general/smash_logo_large.png' />\n            <button className='Characters' \n              onClick={() => this.props.toggleLanding(false)}>Continue to Site\n            </button>\n            <div className='countdown-container'>\n              <p className='countdown-label'>COUNTDOWN TO ULTIMATE</p>\n              <p id='timer' onLoad={this.runCountdown()}></p>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className='nothing'>\n        </div>\n      );\n    }\n  } \n}\n\nexport default Landing;","const categories = [ \n  {\n    name: 'Name',\n    key1: 'name',\n    key2: false\n  }, \n  {\n    name: 'Tier',\n    key1: 'tier',\n    key2: 'tier'\n  }, \n  {\n    name: 'Rank',\n    key1: 'tier',\n    key2: 'rank'\n  }, \n  {\n    name: 'Win',\n    key1: 'world_stats',\n    key2: 'wins'\n  }, \n  {\n    name: 'Loss',\n    key1: 'world_stats',\n    key2: 'losses'\n  }, \n  {\n    name: 'Weight-Cls',\n    key1: 'weight',\n    key2: 'class'\n  }, \n  {\n    name: 'Wt',\n    key1: 'weight',\n    key2: 'weight_value'\n  }, \n  {\n    name: 'Jump',\n    key1: 'jump_height',\n  }, \n  {\n    name: 'Dash',\n    key1: 'speeds',\n    key2: 'initial_dash'\n  }, \n  {\n    name: 'Run',\n    key1: 'speeds',\n    key2: 'run_speed'\n  }, \n  {\n    name: 'Air',\n    key1: 'speeds',\n    key2: 'air_speed'\n  }, \n  {\n    name: 'Spd-Rk',\n    key1: 'speeds',\n    key2: 'speed_rank'\n  }, \n  {\n    name: 'Ctr',\n    key1: 'counter',\n    key2: false\n  }, \n  {\n    name: 'Top-Smash',\n    key1: 'strongest_smash',\n    key2: 'damage'\n  }, \n];\n\nconst cardCategories = [\n  {\n    name: 'Class',\n    key1: 'weight',\n    key2: 'class'\n  },\n  {\n    name: 'Speed',\n    key1: 'speeds',\n    key2: 'speed_rank'\n  },\n  {\n    name: 'Rank',\n    key1: 'tier',\n    key2: 'rank'\n  }\n];\n\nconst cardProsCons = [\n  {\n    name: 'Pros',\n    key: 'pros'\n  },\n  {\n    name: 'Cons',\n    key: 'cons'\n  }\n];\n\nconst letterSuperScripts = [\n  {num: 11, script: 'th'},\n  {num: 1, script: 'st'},\n  {num: 2, script: 'nd'},\n  {num: 3, script: 'rd'},\n  {num: 4, script: 'th'},\n  {num: 5, script: 'th'},\n  {num: 6, script: 'th'},\n  {num: 7, script: 'th'},\n  {num: 8, script: 'th'},\n  {num: 9, script: 'th'},\n  {num: 0, script: 'th'},\n];\n\n\nexport {\n  categories,\n  cardCategories,\n  cardProsCons,\n  letterSuperScripts\n};\n","import React, { Component } from 'react';\nimport { cardCategories } from './data';\nimport { cardProsCons } from './data';\nimport { letterSuperScripts} from './data';\nimport './styles/main.scss';\n\nclass CharacterInfoCard extends Component {\n\n  addSuperScript(rank) {\n    if (typeof rank === 'number') {\n      let superScript = letterSuperScripts.find( (script) => {\n        let numArray = [...rank.toString()];\n          console.log(parseInt(numArray.join('')))\n        if (parseInt(numArray.join('')) ===  11 || parseInt(numArray.join('')) === 12 || parseInt(numArray.join('')) === 13) {\n          console.log(script)\n          return 'th';\n        } else {\n          return script.num === parseInt(numArray[numArray.length - 1]);\n        }\n      });\n\n      return <h2 className={`card card-speed-value card-value`}>\n        {rank}<span className='super-script'>{superScript.script}</span></h2>;\n    }\n    return rank;\n  }\n\n  render() {\n    if (!this.props.character) {\n      return ( <div className='none'></div> );\n    } else {\n      return (\n        <div className='arrow-wrapper'>\n          <div className='character-info-card'>\n            <div className='triangle'></div>\n            <div className='card top-row'>\n              <section className='card card-name-container'>\n                <h1 className='card card-name'>\n                  {this.props.character.name}\n                </h1> \n                <h2 className='card card-universe'>\n                  {this.props.character.universe.name}\n                </h2> \n              </section>\n              <section className='card tier-container'>\n                <h2 className='card card-tier-label'>Tier:</h2> \n                <h1 className='card card-tier' \n                  id={this.props.character.tier.tier}>{\n                    this.props.character.tier.tier}\n                </h1> \n              </section>\n            </div>\n            <div className='main-card-content'>\n              <object className='card-icon'  \n                type=\"image/svg+xml\" \n                data={this.props.character.universe.icon}></object>\n              <img className='card card-image' \n                src={this.props.character.images.large} />\n              <div className='main-card-stats'>\n                <section className='card card-middle-tier-container'>\n                  {\n                    cardCategories.map( (category, i) => {\n                      return <div className='character-stats-div' key={i}>\n                        <h3 className=\n                          {`card card-${category.name.toLowerCase()}-label card-label`}>\n                          {category.name}\n                        </h3>\n                        <h2 className=\n                          {`card card-${category.name.toLowerCase()}-value card-value`}>\n                          {this.addSuperScript(this.props.character[category.key1][category.key2])}\n                        </h2>\n                      </div>;\n                    })\n                  }\n                </section>\n                <section className='pro-con-container'>\n                  {\n                    cardProsCons.map( (category, i) => {\n                      return <section className='card stat-container' key={i}>\n                        <h3 className={`card card-${category.name.toLowerCase()}-label card-label`}>\n                          {category.name}</h3>\n                        {\n                          this.props.character[category.key].map( (item, i) => {\n                            return <p className={`card card-${category.key}`}\n                              key={i}>{`-${item}`}</p>;\n                          })\n                        }\n                      </section>;\n                    } )\n                  }\n                </section>\n                <a href={this.props.character.smash_wiki} \n                  target='_blank' \n                  className='card card-link'>Learn More</a>\n              </div>\n            </div>\n          </div>\n          <button onClick={() => this.props.scrollCard(-1)} \n            className='left-button scroll-button'>\n            <i className=\"fas fa-angle-left\"></i>\n          </button>\n          <button onClick={() => this.props.scrollCard(1)} \n            className='right-button scroll-button'>\n            <i className=\"fas fa-angle-right\"></i>\n          </button>\n          <button onClick={e => this.props.removeCard(e)} \n            className='delete delete-button scroll-button'>\n            <i className=\"delete fas fa-times\"></i>\n          </button>\n        </div>\n      );\n    }\n  }\n}\n\nexport default CharacterInfoCard;","import React, { Component } from 'react';\nimport './styles/main.scss';\n \nclass Search extends Component {\n  render() {\n    return (\n      <div>\n        <input onKeyUp={e => this.props.search(e.target.value)} \n          className='search-input' \n          placeholder='search by name' \n          type='text' />\n        <div className='suggestions-container'>\n          <div className='suggestions'>\n            {\n              this.props.suggestions.map((suggestion, i)=> {\n                if (this.props.suggestions.length < 58) {\n                  return <li className={`suggestion suggestion${i}`}\n                    onClick={e => {\n                      e.target.parentElement.parentElement.previousElementSibling.value = e.target.innerText;\n                      this.props.search(e.target.innerText);\n                    }\n                    }>{suggestion}</li>;\n                }\n              })\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\nexport default Search;","import React, { Component } from 'react';\nimport './styles/main.scss';\n\nclass Filter extends Component {\n  render() {\n    return (\n      <div className='filter-container'>\n        <select onChange={e => this.props.filterByUniverse(e.target.value)} \n          className='filter' \n          placeholder='Filter by Universe'>\n          <option value='all' className='filter-option'>All</option>\n          {\n            this.props.universes.map((universe, i) => {\n              return <option value={universe} \n                className='filter-option'\n                key={i}>\n                {universe}\n              </option>;\n            })\n          }\n        </select>\n      </div>\n\n    );\n  }\n}\n\n\nexport default Filter;","import React, { Component } from 'react';\nimport './styles/main.scss';\n\nclass Universe extends Component {\n  render() {\n    if (this.props.universe === 'all' \n     || this.props.universe === 'Super Smash Bros.') {\n      return (\n        <img className='universe-pic smash-logo' \n          src='./images/general/smash_logo_large.png'>\n        </img>\n      );\n    }\n    return (\n      <img className='universe-pic' \n        src={`./images/universe_logos/${(this.props.universe.replace(/\\s/g, '_')).toLowerCase()}_logo.png`}>\n      </img>\n    );\n  }\n}\n\n\nexport default Universe;","import React, { Component } from 'react';\nimport './styles/main.scss';\nimport CharacterInfoCard from './CharacterInfoCard.js';\nimport Search from './Search.js';\nimport Filter from './Filter.js';\nimport Universe from './Universe';\nimport Trie from '@jake.lauer27/autocomplete';\n\n\nclass Characters extends Component {\n  constructor() {\n    super();\n    this.state = {\n      characterList: [],\n      card: '',\n      characters: [],\n      currentCharacter: '',\n      universe: 'all',\n      suggestions: []\n    };\n    this.trie = new Trie();\n  }\n\n  componentDidMount() {\n    fetch('https://whateverly-datasets.herokuapp.com/api/v1/characters')\n      .then(response => response.json())\n      .then(data => {\n        this.trie.populate(data.characters.map(character => character.name));\n        var dataset = data.characters.map((character, i) => {\n          let rank = 59;\n\n          data.characters.forEach(compare => {\n            if (character.speeds.run_speed + \n                character.speeds.air_speed + \n                character.speeds.initial_dash \n                >= compare.speeds.run_speed +  \n                compare.speeds.air_speed + \n                compare.speeds.initial_dash) {\n              rank --;\n            }\n          });\n          character.speeds.speed_rank = rank;\n          character.index = i;\n          return character;\n        });\n\n        this.setState({\n          characterList: dataset,\n          characters: dataset\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  search = (searchInput) => {\n    let filteredCharacters = this.state.characterList.filter((character) => {  \n      return character.name.toUpperCase().includes(searchInput.toUpperCase());\n    });\n\n    document.querySelector('.filter').value = 'All';\n    this.setState({\n      characters: this.setIndex(filteredCharacters),\n      universe: 'all',\n      suggestions: this.trie.suggest(searchInput)\n    });\n  }\n\n  selectCharacter(e) {\n    let character = this.state.characters.find((character) => {\n      return character.index === parseInt(e.target.classList[0]);\n    });\n\n    this.setState({\n      currentCharacter: parseInt(e.target.classList[0]),\n      card: character\n    });\n  }\n\n  setIndex(array) {\n    return array.map((character, i) => {\n      character.index = i;\n      return character;\n    });\n  }\n\n  scrollCard = (num) => {\n    var newNum = num;\n    let character = this.state.characters.find((character) => {\n      if (this.state.currentCharacter === 0 && num === -1) {\n        newNum = this.state.characters.length - 1;\n      } else if (this.state.currentCharacter === \n                this.state.characters.length - 1 \n                && num === 1) {\n        newNum = -(this.state.characters.length - 1);\n      }\n      return character.index === this.state.currentCharacter + newNum;\n    });\n\n    this.setState ({\n      currentCharacter: this.state.currentCharacter + newNum,\n      card: character\n    });\n  }\n\n  removeCard = (e) => {\n    if (e.target.classList.contains('delete')) {\n      this.setState({\n        card: ''\n      });\n    }\n  }\n\n  filterByUniverse = (universe) => {\n    let filteredCharacters;\n\n    if (universe === 'all') {\n      filteredCharacters = this.state.characterList;\n    } else {\n      filteredCharacters = this.state.characterList.filter((character) => {  \n        return character.universe.name === universe;\n      });\n    }\n    document.querySelector('.search-input').value = '';\n    this.setState({\n      characters: this.setIndex(filteredCharacters),\n      universe\n    });\n  }\n\n  distillUniverses() {\n    let universes = this.state.characterList.map(character => character.universe.name);\n    let filteredUniverses = [];\n\n    universes.forEach((universe) => {\n      if (filteredUniverses.indexOf(universe) === -1) {\n        filteredUniverses.push(universe);\n      }\n    });\n    return filteredUniverses;\n  }\n\n  render() {\n    return (\n      <div className='characters-page'>\n        <div className='search-container'>\n          <Search search={this.search}\n            suggestions={this.state.suggestions}/>\n          <Filter  universes={this.distillUniverses()}\n            filterByUniverse={this.filterByUniverse} />\n        </div>\n        <Universe universe={this.state.universe}/>\n        <div className='grid-container'>\n          <div className=\"characters-grid\">\n            {\n              this.state.characters.map((character) => {\n                return (\n                  <div onClick={e => this.selectCharacter(e)} \n                    className={`${character.index} character-preview-card`} \n                    key={character.index}\n                    style={{'backgroundImage': `url(${character.images.icon})`}}>\n                    <h2 onClick={e => this.selectCharacter(e)} \n                      className={`${character.index} preview-card-name`}>\n                      {character.name}\n                    </h2>\n                  </div>\n                );    \n              })\n            }\n            <CharacterInfoCard character={this.state.card} \n              scrollCard={this.scrollCard}\n              removeCard={this.removeCard}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Characters;\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { categories } from './data';\nimport './styles/main.scss';\n\nclass CompareRow extends Component { \n  constructor() {\n    super();\n    this.state = {\n    };\n  }\n\n  render() {\n    return (\n      <tr>\n        <td className={this.props.row}>\n          <img src={this.props.character.images.small_icon}/>\n        </td>\n        {\n          categories.map((category, index) => {\n            let highlight = '';\n\n            if (this.props.highlight === category.name) {\n              highlight = 'highlight';\n            }\n            if (!category.key2) {\n              return <td className={`${this.props.row} ${highlight}`} \n                key={index}>{this.props.character[category.key1]}\n              </td>;\n            } else {\n              return <td className={`${this.props.row} ${highlight}`} \n                key={index}>{this.props.character[category.key1][category.key2]}\n              </td>;\n            }\n          })\n        }\n      </tr>\n    );\n  }\n}\n\nexport default CompareRow;","import React, { Component } from 'react';\nimport { categories } from './data';\nimport CompareItem from './CompareItem';\nimport './styles/main.scss';\n\nclass Compare extends Component {\n  constructor() {\n    super();\n    this.state = {\n      characters: [],\n      highlight: 'Name',\n      up: '',\n      rotate: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://whateverly-datasets.herokuapp.com/api/v1/characters')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          characters: data.characters.map((character) => {\n            let rank = 59;\n\n            data.characters.forEach(compare => {\n              if (character.speeds.run_speed + \n                  character.speeds.air_speed + \n                  character.speeds.initial_dash \n                  >= compare.speeds.run_speed +  \n                  compare.speeds.air_speed + \n                  compare.speeds.initial_dash)  {\n                rank --;\n              }\n            });\n            character.speeds.speed_rank = rank;\n            return character;\n          })\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  sortTable(e, sortKey, sortKey2) {\n    var sortedData;\n\n    if (e.target.classList.contains('up')) {\n      sortedData = this.sortDown(e);\n    } else {\n      sortedData = this.sortUp(e, sortKey, sortKey2);\n    }\n    this.setState({\n      characters: sortedData,\n      highlight: e.target.classList[0],\n      up: e.target.classList[0], \n      rotate: e.target.classList[0]\n    });\n  }\n\n  sortUp(e, sortKey, sortKey2) {\n    return this.state.characters.sort( (a, b) => {\n      if (sortKey2) {\n        if (a[sortKey][sortKey2] > b[sortKey][sortKey2]) {\n          return -1;\n        }\n        if (a[sortKey][sortKey2] < b[sortKey][sortKey2]) {\n          return 1;\n        }\n        return 0;\n      }\n      if (a[sortKey] > b[sortKey]) {\n        return -1;\n      }\n      if (a[sortKey] < b[sortKey]) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  sortDown() {\n    return this.state.characters.reverse();\n  }\n\n  render() {\n    return (\n      <div className='compare-page'>\n        <div className='table-container'>\n          <table className='character-grid'>\n            <tbody>\n              <tr className='table-header'>\n                <th>\n                  <img className='compare_smash_logo'\n                    src='./images/universe_icons/flame_smash_bros.svg'/>\n                </th>\n                {\n                  categories.map((category, index) => {\n                    let highlight = '';\n                    let up = '';\n                    let rotate = '';\n\n                    if (this.state.highlight === category.name) {\n                      highlight = 'highlight';\n                      up = 'up';\n                      rotate = 'rotate-down';\n                    }\n                    return <th onClick={e => this.sortTable(e, category.key1, category.key2)} \n                      className={`${category.name} ${up} ${highlight}`} \n                      key={index}>\n                      {category.name} \n                      <span className='icon-span'>\n                        <i className={`${category.name} arrow fas fa-caret-right ${up} ${rotate}`}>\n                        </i>\n                      </span>\n                    </th>;\n                  })\n                }\n              </tr>\n              {\n                this.state.characters.map( (character, i) => {\n                  var even = 'even';\n                  let counter = 'n';\n\n                  if (character.counter) {\n                    counter = 'y';\n                  } \n                  if ( (i + 2) % 2 !== 0) {\n                    even = 'odd';\n                  }\n                  return <CompareItem character={character} key={i}\n                    counter={counter} \n                    row={even}\n                    highlight={this.state.highlight}/>;\n                })\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Compare;","import './styles/main.scss';\nimport React, { Component } from 'react';\n\nclass StagesCards extends Component {\n\n  render() {\n    if (!this.props.stage) {\n      return ( <div className='none'></div> );\n    } else {\n      return (\n        <div className='arrow-wrapper'>\n          <div className='stage-info-card' >\n            <div className='triangle'></div>\n            <section className='stage-card-main' >\n              <img className='stage-card-image' \n                src={this.props.stage.stage_image} />\n            </section>\n            <section className='stage-card-details'> \n              <h1 className='stage-card-name'>{this.props.stage.name}</h1>\n              <p className='stage-card-universe-name'>\n                {this.props.stage.universe.name}\n              </p>\n              <h2 className='stage-card-available-label'>Now Available On:</h2>\n              <div className='labels'>\n                <p className='stage-card-label'>DLC</p>\n                <p className='stage-card-label'>Nintendo 3DS</p>\n                <p className='stage-card-label'>Wii U</p>\n              </div>\n              <section className='stage-game-availability'>\n                {\n                  Object.keys((this.props.stage)).map((key, index) => {\n                    if (typeof this.props.stage[key] === 'boolean') {\n                      let value = 'No'; \n\n                      if (this.props.stage[key]) {\n                        value = 'Yes';\n                      } \n                      return ( \n                        <p className={`stage-cards-${key}`} \n                          key={index}>{value}</p> \n                      );\n                    }\n                  })\n                }\n              </section>\n            </section>\n            <a href={this.props.stage.smash_wiki} \n              className='stage-card-info-link'>Learn More\n            </a>\n          </div>\n          <button onClick={() => this.props.scrollStageCard(-1)} \n            className='stage-left-button scroll-button'>\n            <i className=\"fas fa-angle-left\"></i>\n          </button>\n          <button onClick={() => this.props.scrollStageCard(1)} \n            className='stage-right-button scroll-button'>\n            <i className=\"fas fa-angle-right\"></i>\n          </button>\n          <button onClick={e => this.props.removeCard(e)}\n            className=' delete stage-delete-button scroll-button'>\n            <i onClick={e => this.props.removeCard(e)} \n              className=\"delete fas fa-times\"></i>\n          </button>\n        </div>\n      );\n    }\n  }\n}\n\n\n                       \n\nexport default StagesCards;","import React, { Component } from 'react';\nimport './styles/main.scss';\nimport StagesCards from './StagesCards.js';\nimport Search from './Search.js';\nimport Filter from './Filter.js';\nimport Universe from './Universe';\nimport Trie from '@jake.lauer27/autocomplete';\n\nclass Stages extends Component {\n  constructor() {\n    super();\n    this.state = {\n      stageList: [],\n      stages: [],\n      card: '',\n      currentStage: '',\n      universe: 'all',\n      suggestions: []\n    }; \n    this.trie = new Trie();\n  }\n\n  componentDidMount() {\n    fetch('https://whateverly-datasets.herokuapp.com/api/v1/stages')\n      .then(response => response.json())\n      .then(stages => {\n        this.trie.populate(stages.stages.map(stage => stage.name));\n        var dataset = stages.stages.map((stage, i) => {\n          stage.index = i;\n          return stage;\n        });\n\n        this.setState({\n          stageList: dataset,\n          stages: dataset\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  selectStage(e) {\n    let stage = this.state.stages.find((stage) => {\n      return stage.index === parseInt(e.target.classList[0]);\n    });\n\n    this.setState({\n      currentStage: parseInt(e.target.classList[0]),\n      card: stage\n    });\n  }\n\n  setStageIndex() {\n    this.setState({\n      stages: this.state.stages.map((stage, i) => {\n        stage.index = i;\n        return stage;\n      })\n    });\n  }\n\n  removeCard = (e) => {\n    if (e.target.classList.contains('delete')) {\n      this.setState({\n        card: ''\n      });\n    }\n  }\n\n  scrollStageCard = (num) => {\n    let newNum = num;\n    let stage = this.state.stages.find((stage) => {\n      if (this.state.currentStage === 0 && num === -1) {\n        newNum = this.state.stages.length - 1;\n      } else if (this.state.currentStage === this.state.stages.length - 1 && num === 1) {\n        newNum = -(this.state.stages.length - 1);\n      }\n      return stage.index === this.state.currentStage + newNum;\n    });\n\n    this.setState ({\n      currentStage: this.state.currentStage + newNum,\n      card: stage\n    }); \n  }\n\n  filterByUniverse = (universe) => {\n    let filteredStages;\n\n    if (universe === 'all') {\n      filteredStages = this.state.stageList;\n    } else {\n      filteredStages = this.state.stageList.filter((stage) => {  \n        return stage.universe.name === universe;\n      });\n    }\n    document.querySelector('.search-input').value = '';\n    this.setState({\n      stages: this.setIndex(filteredStages),\n      universe\n    });\n  }\n\n  distillUniverses() {\n    let universes = this.state.stageList.map(stage => stage.universe.name);\n    let filteredUniverses = [];\n\n    universes.forEach((universe) => {\n      if (filteredUniverses.indexOf(universe) === -1) {\n        filteredUniverses.push(universe);\n      }\n    });\n    return filteredUniverses;\n  }\n\n  setIndex(array) {\n    return array.map((stage, i) => {\n      stage.index = i;\n      return stage;\n    });\n  }\n\n  search = (searchInput) => {\n    let filteredStages = this.state.stageList.filter((stage) => {  \n      return stage.name.toUpperCase().includes(searchInput.toUpperCase());\n    });\n\n    document.querySelector('.filter').value = 'All';\n    this.setState({\n      stages: this.setIndex(filteredStages),\n      suggestions: this.trie.suggest(searchInput)\n    });\n  }\n\n  render() {\n    return (\n      <div className='stages-page'>\n        <div className='search-container'>\n          <Search search={this.search}\n            suggestions={this.state.suggestions} />\n          <Filter universes={this.distillUniverses()}\n            filterByUniverse={this.filterByUniverse} />\n        </div>\n        <Universe universe={this.state.universe}/>\n        <section className='stages-body'>\n          {  \n            this.state.stages.map((stage) => {\n              return (\n                <div onClick={e => this.selectStage(e)} \n                  className={`${stage.index} stage-cards`} \n                  key={stage.name} \n                  style={{'backgroundImage': `url(${stage.stage_image})`}}>\n                  <h2 onClick={e => this.selectStage(e)} \n                    className={`${stage.index} stage-name`}>{stage.name}\n                  </h2>\n                </div>\n              );\n            })\n          } \n          <StagesCards  stage={this.state.card} \n            scrollStageCard={this.scrollStageCard}\n            removeCard={this.removeCard} />\n        </section>\n      </div> \n    );\n  }\n}\n\n\n\nexport default Stages;\n\n\n\n\n\n\n  ","import React, { Component } from 'react';\nimport Landing from './Landing';\nimport Characters from './Characters';\nimport Compare from './Compare';\nimport Stages from './Stages';\nimport './styles/main.scss';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Characters: false,\n      Stages: false,\n      Compare: false,\n      landing: true\n    };\n    this.keys = Object.keys(this.state);\n  }\n\n  renderSection = (e) => {\n    const section = e.target.classList[0];\n\n    this.setState({\n      Characters: false,\n      Stages: false,\n      Compare: false,\n      [section]: true\n    });\n  }\n\n  toggleLanding = (show) => {\n    this.setState({\n      landing: show,\n      Characters: true\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Landing renderCharacters={this.renderSection}\n          showLanding={this.state.landing}\n          toggleLanding={(show) => this.toggleLanding(show)}/>\n        <header className=\"header\">\n          <img src='./images/universe_icons/flame_smash_bros.svg' \n            className='smash-small' \n            onClick={() => this.toggleLanding(true)}/>\n          <div className=\"header-buttons\">\n            <button className='Compare header-button' \n              onClick={this.renderSection}>COMPARE</button>\n            <button className='Stages header-button' \n              onClick={this.renderSection}>STAGES</button>\n            <button className='Characters header-button' \n              onClick={this.renderSection}>CHARACTERS</button>\n          </div>\n        </header>\n        {\n          this.keys.map( key => {\n            if (this.state[key]) {\n              switch (key) {\n              case 'Characters':\n                return <Characters key={key} />;\n              case 'Stages':\n                return <Stages key={key} />;\n              case 'Compare':\n                return <Compare key={key}/>;\n              }\n            }\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}