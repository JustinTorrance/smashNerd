{"version":3,"sources":["Landing.js","data.js","CharacterInfoCard.js","Search.js","Filter.js","Universe.js","Characters.js","CompareItem.js","Compare.js","StagesCards.js","Stages.js","App.js","serviceWorker.js","index.js"],"names":["clouds","i","push","concat","Landing","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hide","e","props","renderCharacters","setState","showLanding","state","react_default","a","createElement","className","map","cloud","key","src","onClick","Component","categories","name","key1","key2","cardCategories","cardProsCons","letterSuperScripts","num","script","CharacterInfoCard","rank","superScript","find","numArray","toConsumableArray","toString","parseInt","join","length","character","universe","id","tier","type","data","icon","images","large","category","toLowerCase","addSuperScript","item","href","smash_wiki","target","scrollCard","removeCard","Search","onKeyUp","search","value","placeholder","suggestions","suggestion","parentElement","previousElementSibling","innerText","Filter","onChange","filterByUniverse","universes","Universe","replace","Characters","searchInput","filteredCharacters","characterList","filter","toUpperCase","includes","document","querySelector","characters","setIndex","trie","suggest","newNum","currentCharacter","index","card","classList","contains","Trie","_this2","fetch","then","response","json","populate","dataset","forEach","compare","speeds","run_speed","air_speed","initial_dash","speed_rank","loading","catch","error","console","log","array","filteredUniverses","indexOf","_this3","src_Search","src_Filter","distillUniverses","src_Universe","selectCharacter","style","backgroundImage","src_CharacterInfoCard","CompareRow","row","small_icon","highlight","Compare","up","rotate","sortKey","sortKey2","sortedData","sortDown","sortUp","sort","b","reverse","sortTable","even","counter","CompareItem","StagesCards","stage","stage_image","keys","scrollStageCard","Stages","stages","currentStage","filteredStages","stageList","selectStage","src_StagesCards","App","renderSection","section","defineProperty","src_Landing","src_Characters","src_Stages","src_Compare","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7437bda5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './styles/main.scss';\n\nconst clouds = [];\n\nfor (let i = 1; i <= 16; i++) {\n  clouds.push(`cloud${i}`);\n}\n\nclass Landing extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showLanding: true\n    };\n  }\n  hide = (e) => {\n    this.props.renderCharacters(e);\n    this.setState({\n      showLanding: false\n    });\n  }\n\n  render() {\n    if (this.state.showLanding) {\n      return (\n        <div className='landing-page'>\n          <div className='action-container'>\n            {\n              clouds.map( (cloud, i) => {\n                return  <img className={`${cloud} cloud`} \n                  key={i} \n                  src={`./images/general/${cloud}.png`} />;\n              })\n            }\n            <img className='smash-logo' \n              src='./images/general/smash_logo_large.png' />\n            <button className='Characters' \n              onClick={this.hide}>Continue to Site\n            </button>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className='nothing'>\n        </div>\n      );\n    }\n  } \n}\n\nexport default Landing;","const categories = [ \n  {\n    name: 'Name',\n    key1: 'name',\n    key2: false\n  }, \n  {\n    name: 'Tier',\n    key1: 'tier',\n    key2: 'tier'\n  }, \n  {\n    name: 'Rank',\n    key1: 'tier',\n    key2: 'rank'\n  }, \n  {\n    name: 'Win',\n    key1: 'world_stats',\n    key2: 'wins'\n  }, \n  {\n    name: 'Loss',\n    key1: 'world_stats',\n    key2: 'losses'\n  }, \n  {\n    name: 'Weight-Cls',\n    key1: 'weight',\n    key2: 'class'\n  }, \n  {\n    name: 'Wt',\n    key1: 'weight',\n    key2: 'weight_value'\n  }, \n  {\n    name: 'Jump',\n    key1: 'jump_height',\n  }, \n  {\n    name: 'Dash',\n    key1: 'speeds',\n    key2: 'initial_dash'\n  }, \n  {\n    name: 'Run',\n    key1: 'speeds',\n    key2: 'run_speed'\n  }, \n  {\n    name: 'Air',\n    key1: 'speeds',\n    key2: 'air_speed'\n  }, \n  {\n    name: 'Spd-Rk',\n    key1: 'speeds',\n    key2: 'speed_rank'\n  }, \n  {\n    name: 'Ctr',\n    key1: 'counter',\n    key2: false\n  }, \n  {\n    name: 'Top-Smash',\n    key1: 'strongest_smash',\n    key2: 'damage'\n  }, \n];\n\nconst cardCategories = [\n  {\n    name: 'Class',\n    key1: 'weight',\n    key2: 'class'\n  },\n  {\n    name: 'Speed',\n    key1: 'speeds',\n    key2: 'speed_rank'\n  },\n  {\n    name: 'Rank',\n    key1: 'tier',\n    key2: 'rank'\n  }\n];\n\nconst cardProsCons = [\n  {\n    name: 'Pros',\n    key: 'pros'\n  },\n  {\n    name: 'Cons',\n    key: 'cons'\n  }\n];\n\nconst letterSuperScripts = [\n  {num: 1, script: 'st'},\n  {num: 2, script: 'nd'},\n  {num: 3, script: 'rd'},\n  {num: 4, script: 'th'},\n  {num: 5, script: 'th'},\n  {num: 6, script: 'th'},\n  {num: 7, script: 'th'},\n  {num: 8, script: 'th'},\n  {num: 9, script: 'th'},\n  {num: 0, script: 'th'},\n  {num: 11, script: 'th'},\n  {num: 12, script: 'th'},\n  {num: 13, script: 'th'},\n];\n\n\nexport {\n  categories,\n  cardCategories,\n  cardProsCons,\n  letterSuperScripts\n};\n","import React, { Component } from 'react';\nimport { cardCategories } from './data';\nimport { cardProsCons } from './data';\nimport { letterSuperScripts} from './data';\nimport './styles/main.scss';\n\nclass CharacterInfoCard extends Component {\n\n  addSuperScript(rank) {\n    if (typeof rank === 'number') {\n      let superScript = letterSuperScripts.find( (script) => {\n        let numArray = [...rank.toString()];\n\n        if (numArray === ['1', '1'] || numArray === ['1', '2'] || numArray === ['1', '3']) {\n          return script.num === parseInt(numArray.join(''));\n        }\n        return script.num === parseInt(numArray[numArray.length - 1]);\n      });\n\n      return <h2 className={`card card-speed-value card-value`}>\n        {rank}<span className='super-script'>{superScript.script}</span></h2>;\n    }\n    return rank;\n  }\n\n  render() {\n    if (!this.props.character) {\n      return ( <div className='none'></div> );\n    } else {\n      return (\n        <div className='arrow-wrapper'>\n          <div className='character-info-card'>\n            <div className='triangle'></div>\n            <div className='card top-row'>\n              <section className='card card-name-container'>\n                <h1 className='card card-name'>\n                  {this.props.character.name}\n                </h1> \n                <h2 className='card card-universe'>\n                  {this.props.character.universe.name}\n                </h2> \n              </section>\n              <section className='card tier-container'>\n                <h2 className='card card-tier-label'>Tier:</h2> \n                <h1 className='card card-tier' \n                  id={this.props.character.tier.tier}>{\n                    this.props.character.tier.tier}\n                </h1> \n              </section>\n            </div>\n            <div className='main-card-content'>\n              <object className='card-icon'  \n                type=\"image/svg+xml\" \n                data={this.props.character.universe.icon}></object>\n              <img className='card card-image' \n                src={this.props.character.images.large} />\n              <div className='main-card-stats'>\n                <section className='card card-middle-tier-container'>\n                  {\n                    cardCategories.map( (category, i) => {\n                      return <div className='character-stats-div' key={i}>\n                        <h3 className=\n                          {`card card-${category.name.toLowerCase()}-label card-label`}>\n                          {category.name}\n                        </h3>\n                        <h2 className=\n                          {`card card-${category.name.toLowerCase()}-value card-value`}>\n                          {this.addSuperScript(this.props.character[category.key1][category.key2])}\n                        </h2>\n                      </div>;\n                    })\n                  }\n                </section>\n                <section className='pro-con-container'>\n                  {\n                    cardProsCons.map( (category, i) => {\n                      return <section className='card stat-container' key={i}>\n                        <h3 className={`card card-${category.name.toLowerCase()}-label card-label`}>\n                          {category.name}</h3>\n                        {\n                          this.props.character[category.key].map( (item, i) => {\n                            return <p className={`card card-${category.key}`}\n                              key={i}>{`-${item}`}</p>;\n                          })\n                        }\n                      </section>;\n                    } )\n                  }\n                </section>\n                <a href={this.props.character.smash_wiki} \n                  target='_blank' \n                  className='card card-link'>Learn More</a>\n              </div>\n            </div>\n          </div>\n          <button onClick={() => this.props.scrollCard(-1)} \n            className='left-button scroll-button'>\n            <i className=\"fas fa-angle-left\"></i>\n          </button>\n          <button onClick={() => this.props.scrollCard(1)} \n            className='right-button scroll-button'>\n            <i className=\"fas fa-angle-right\"></i>\n          </button>\n          <button onClick={e => this.props.removeCard(e)} \n            className='delete delete-button scroll-button'>\n            <i className=\"delete fas fa-times\"></i>\n          </button>\n        </div>\n      );\n    }\n  }\n}\n\nexport default CharacterInfoCard;","import React, { Component } from 'react';\nimport './styles/main.scss';\n \nclass Search extends Component {\n  render() {\n    return (\n      <div>\n        <input onKeyUp={e => this.props.search(e.target.value)} \n          className='search-input' \n          placeholder='search by name' \n          type='text' />\n        <div className='suggestions-container'>\n          <div className='suggestions'>\n            {\n              this.props.suggestions.map((suggestion, i)=> {\n                if (this.props.suggestions.length < 58) {\n                  return <li className={`suggestion suggestion${i}`}\n                    onClick={e => {\n                      e.target.parentElement.parentElement.previousElementSibling.value = e.target.innerText;\n                      this.props.search(e.target.innerText);\n                    }\n                    }>{suggestion}</li>;\n                }\n              })\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\nexport default Search;","import React, { Component } from 'react';\nimport './styles/main.scss';\n\nclass Filter extends Component {\n  render() {\n    return (\n      <div className='filter-container'>\n        <select onChange={e => this.props.filterByUniverse(e.target.value)} \n          className='filter' \n          placeholder='Filter by Universe'>\n          <option value='all' className='filter-option'>All</option>\n          {\n            this.props.universes.map((universe, i) => {\n              return <option value={universe} \n                className='filter-option'\n                key={i}>\n                {universe}\n              </option>;\n            })\n          }\n        </select>\n      </div>\n\n    );\n  }\n}\n\n\nexport default Filter;","import React, { Component } from 'react';\nimport './styles/main.scss';\n\nclass Universe extends Component {\n  render() {\n    if (this.props.universe === 'all' \n     || this.props.universe === 'Super Smash Bros.') {\n      return (\n        <img className='universe-pic smash-logo' \n          src='./images/general/smash_logo_large.png'>\n        </img>\n      );\n    }\n    return (\n      <img className='universe-pic' \n        src={`./images/universe_logos/${this.props.universe.replace(/\\s/g, '_')}_logo.png`}>\n      </img>\n    );\n  }\n}\n\n\nexport default Universe;","import React, { Component } from 'react';\nimport './styles/main.scss';\nimport CharacterInfoCard from './CharacterInfoCard.js';\nimport Search from './Search.js';\nimport Filter from './Filter.js';\nimport Universe from './Universe';\nimport Trie from '@jake.lauer27/autocomplete';\n\n\nclass Characters extends Component {\n  constructor() {\n    super();\n    this.state = {\n      characterList: [],\n      card: '',\n      characters: [],\n      currentCharacter: '',\n      universe: 'all',\n      suggestions: []\n    };\n    this.trie = new Trie();\n  }\n\n  componentDidMount() {\n    fetch('http://whateverly-datasets.herokuapp.com/api/v1/characters')\n      .then(response => response.json())\n      .then(data => {\n        this.trie.populate(data.characters.map(character => character.name));\n        var dataset = data.characters.map((character, i) => {\n          let rank = 59;\n\n          data.characters.forEach(compare => {\n            if (character.speeds.run_speed + \n                character.speeds.air_speed + \n                character.speeds.initial_dash \n                >= compare.speeds.run_speed +  \n                compare.speeds.air_speed + \n                compare.speeds.initial_dash) {\n              rank --;\n            }\n          });\n          character.speeds.speed_rank = rank;\n          character.index = i;\n          return character;\n        });\n\n        this.setState({\n          characterList: dataset,\n          characters: dataset\n        }, () => {\n          this.setState({loading: false});\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  search = (searchInput) => {\n    let filteredCharacters = this.state.characterList.filter((character) => {  \n      return character.name.toUpperCase().includes(searchInput.toUpperCase());\n    });\n\n    document.querySelector('.filter').value = 'All';\n    this.setState({\n      characters: this.setIndex(filteredCharacters),\n      universe: 'all',\n      suggestions: this.trie.suggest(searchInput)\n    });\n  }\n\n  selectCharacter(e) {\n    let character = this.state.characters.find((character) => {\n      return character.index === parseInt(e.target.classList[0]);\n    });\n\n    this.setState({\n      currentCharacter: parseInt(e.target.classList[0]),\n      card: character\n    });\n  }\n\n  setIndex(array) {\n    return array.map((character, i) => {\n      character.index = i;\n      return character;\n    });\n  }\n\n  scrollCard = (num) => {\n    var newNum = num;\n    let character = this.state.characters.find((character) => {\n      if (this.state.currentCharacter === 0 && num === -1) {\n        newNum = this.state.characters.length - 1;\n      } else if (this.state.currentCharacter === \n                this.state.characters.length - 1 \n                && num === 1) {\n        newNum = -(this.state.characters.length - 1);\n      }\n      return character.index === this.state.currentCharacter + newNum;\n    });\n\n    this.setState ({\n      currentCharacter: this.state.currentCharacter + newNum,\n      card: character\n    });\n  }\n\n  removeCard = (e) => {\n    if (e.target.classList.contains('delete')) {\n      this.setState({\n        card: ''\n      });\n    }\n  }\n\n  filterByUniverse = (universe) => {\n    let filteredCharacters;\n\n    if (universe === 'all') {\n      filteredCharacters = this.state.characterList;\n    } else {\n      filteredCharacters = this.state.characterList.filter((character) => {  \n        return character.universe.name === universe;\n      });\n    }\n    document.querySelector('.search-input').value = '';\n    this.setState({\n      characters: this.setIndex(filteredCharacters),\n      universe\n    });\n  }\n\n  distillUniverses() {\n    let universes = this.state.characterList.map(character => character.universe.name);\n    let filteredUniverses = [];\n\n    universes.forEach((universe) => {\n      if (filteredUniverses.indexOf(universe) === -1) {\n        filteredUniverses.push(universe);\n      }\n    });\n    return filteredUniverses;\n  }\n\n  render() {\n    return (\n      <div className='characters-page'>\n        <div className='search-container'>\n          <Search search={this.search}\n            suggestions={this.state.suggestions}/>\n          <Filter  universes={this.distillUniverses()}\n            filterByUniverse={this.filterByUniverse} />\n        </div>\n        <Universe universe={this.state.universe}/>\n        <div className='grid-container'>\n          <div className=\"characters-grid\">\n            {\n              this.state.characters.map((character) => {\n                return (\n                  <div onClick={e => this.selectCharacter(e)} \n                    className={`${character.index} character-preview-card`} \n                    key={character.index}\n                    style={{'backgroundImage': `url(${character.images.icon})`}}>\n                    <h2 onClick={e => this.selectCharacter(e)} \n                      className={`${character.index} preview-card-name`}>\n                      {character.name}\n                    </h2>\n                  </div>\n                );    \n              })\n            }\n            <CharacterInfoCard character={this.state.card} \n              scrollCard={this.scrollCard}\n              removeCard={this.removeCard}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Characters;\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { categories } from './data';\nimport './styles/main.scss';\n\nclass CompareRow extends Component { \n  constructor() {\n    super();\n    this.state = {\n    };\n  }\n\n  render() {\n    return (\n      <tr>\n        <td className={this.props.row}>\n          <img src={this.props.character.images.small_icon}/>\n        </td>\n        {\n          categories.map((category, index) => {\n            let highlight = '';\n\n            if (this.props.highlight === category.name) {\n              highlight = 'highlight';\n            }\n            if (!category.key2) {\n              return <td className={`${this.props.row} ${highlight}`} \n                key={index}>{this.props.character[category.key1]}\n              </td>;\n            } else {\n              return <td className={`${this.props.row} ${highlight}`} \n                key={index}>{this.props.character[category.key1][category.key2]}\n              </td>;\n            }\n          })\n        }\n      </tr>\n    );\n  }\n}\n\nexport default CompareRow;","import React, { Component } from 'react';\nimport { categories } from './data';\nimport CompareItem from './CompareItem';\nimport './styles/main.scss';\n\nclass Compare extends Component {\n  constructor() {\n    super();\n    this.state = {\n      characters: [],\n      highlight: 'Name',\n      up: '',\n      rotate: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://whateverly-datasets.herokuapp.com/api/v1/characters')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          characters: data.characters.map((character) => {\n            let rank = 59;\n\n            data.characters.forEach(compare => {\n              if (character.speeds.run_speed + \n                  character.speeds.air_speed + \n                  character.speeds.initial_dash \n                  >= compare.speeds.run_speed +  \n                  compare.speeds.air_speed + \n                  compare.speeds.initial_dash)  {\n                rank --;\n              }\n            });\n            character.speeds.speed_rank = rank;\n            return character;\n          })\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  sortTable(e, sortKey, sortKey2) {\n    var sortedData;\n\n    if (e.target.classList.contains('up')) {\n      sortedData = this.sortDown(e);\n    } else {\n      sortedData = this.sortUp(e, sortKey, sortKey2);\n    }\n    this.setState({\n      characters: sortedData,\n      highlight: e.target.classList[0],\n      up: e.target.classList[0], \n      rotate: e.target.classList[0]\n    });\n  }\n\n  sortUp(e, sortKey, sortKey2) {\n    return this.state.characters.sort( (a, b) => {\n      if (sortKey2) {\n        if (a[sortKey][sortKey2] > b[sortKey][sortKey2]) {\n          return -1;\n        }\n        if (a[sortKey][sortKey2] < b[sortKey][sortKey2]) {\n          return 1;\n        }\n        return 0;\n      }\n      if (a[sortKey] > b[sortKey]) {\n        return -1;\n      }\n      if (a[sortKey] < b[sortKey]) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  sortDown() {\n    return this.state.characters.reverse();\n  }\n\n  render() {\n    return (\n      <div className='compare-page'>\n        <div className='table-container'>\n          <table className='character-grid'>\n            <tbody>\n              <tr className='table-header'>\n                <th>\n                  <img className='compare_smash_logo'\n                    src='./images/universe_icons/flame_smash_bros.svg'/>\n                </th>\n                {\n                  categories.map((category, index) => {\n                    let highlight = '';\n                    let up = '';\n                    let rotate = '';\n\n                    if (this.state.highlight === category.name) {\n                      highlight = 'highlight';\n                      up = 'up';\n                      rotate = 'rotate-down';\n                    }\n                    return <th onClick={e => this.sortTable(e, category.key1, category.key2)} \n                      className={`${category.name} ${up} ${highlight}`} \n                      key={index}>\n                      {category.name} \n                      <span className='icon-span'>\n                        <i className={`${category.name} arrow fas fa-caret-right ${up} ${rotate}`}>\n                        </i>\n                      </span>\n                    </th>;\n                  })\n                }\n              </tr>\n              {\n                this.state.characters.map( (character, i) => {\n                  var even = 'even';\n                  let counter = 'n';\n\n                  if (character.counter) {\n                    counter = 'y';\n                  } \n                  if ( (i + 2) % 2 !== 0) {\n                    even = 'odd';\n                  }\n                  return <CompareItem character={character} key={i}\n                    counter={counter} \n                    row={even}\n                    highlight={this.state.highlight}/>;\n                })\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Compare;","import './styles/main.scss';\nimport React, { Component } from 'react';\n\n\n\n\nclass StagesCards extends Component {\n\n  render() {\n    if (!this.props.stage) {\n      return ( <div className='none'></div> );\n    } else {\n      return (\n        <div className='arrow-wrapper'>\n          <div className='stage-info-card' >\n            <div className='triangle'></div>\n            <section className='stage-card-main' >\n              <img className='stage-card-image' \n                src={this.props.stage.stage_image} />\n            </section>\n            <section className='stage-card-details'> \n              <h1 className='stage-card-name'>{this.props.stage.name}</h1>\n              <p className='stage-card-universe-name'>\n                {this.props.stage.universe.name}\n              </p>\n              <h2 className='stage-card-available-label'>Now Available On:</h2>\n              <div className='labels'>\n                <p className='stage-card-label'>DLC</p>\n                <p className='stage-card-label'>Nintendo 3DS</p>\n                <p className='stage-card-label'>Wii U</p>\n              </div>\n              <section className='stage-game-availability'>\n                {\n                  Object.keys((this.props.stage)).map((key, index) => {\n                    if (typeof this.props.stage[key] === 'boolean') {\n                      let value = 'No'; \n\n                      if (this.props.stage[key]) {\n                        value = 'Yes';\n                      } \n                      return ( \n                        <p className={`stage-cards-${key}`} \n                          key={index}>{value}</p> \n                      );\n                    }\n                  })\n                }\n              </section>\n            </section>\n            <a href={this.props.stage.smash_wiki} \n              className='stage-card-info-link'>Learn More\n            </a>\n          </div>\n          <button onClick={() => this.props.scrollStageCard(-1)} \n            className='stage-left-button scroll-button'>\n            <i className=\"fas fa-angle-left\"></i>\n          </button>\n          <button onClick={() => this.props.scrollStageCard(1)} \n            className='stage-right-button scroll-button'>\n            <i className=\"fas fa-angle-right\"></i>\n          </button>\n          <button onClick={e => this.props.removeCard(e)}\n            className=' delete stage-delete-button scroll-button'>\n            <i onClick={e => this.props.removeCard(e)} \n              className=\"delete fas fa-times\"></i>\n          </button>\n        </div>\n      );\n    }\n  }\n}\n\n\n                       \n\nexport default StagesCards;","import React, { Component } from 'react';\nimport './styles/main.scss';\nimport StagesCards from './StagesCards.js';\nimport Search from './Search.js';\nimport Filter from './Filter.js';\nimport Universe from './Universe';\nimport Trie from '@jake.lauer27/autocomplete';\n\nclass Stages extends Component {\n  constructor() {\n    super();\n    this.state = {\n      stageList: [],\n      stages: [],\n      card: '',\n      currentStage: '',\n      universe: 'all',\n      suggestions: []\n    }; \n    this.trie = new Trie();\n  }\n\n  componentDidMount() {\n    fetch('https://whateverly-datasets.herokuapp.com/api/v1/stages')\n      .then(response => response.json())\n      .then(stages => {\n        this.trie.populate(stages.stages.map(stage => stage.name));\n        var dataset = stages.stages.map((stage, i) => {\n          stage.index = i;\n          return stage;\n        });\n\n        this.setState({\n          stageList: dataset,\n          stages: dataset\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  selectStage(e) {\n    let stage = this.state.stages.find((stage) => {\n      return stage.index === parseInt(e.target.classList[0]);\n    });\n\n    this.setState({\n      currentStage: parseInt(e.target.classList[0]),\n      card: stage\n    });\n  }\n\n  setStageIndex() {\n    this.setState({\n      stages: this.state.stages.map((stage, i) => {\n        stage.index = i;\n        return stage;\n      })\n    });\n  }\n\n  removeCard = (e) => {\n    if (e.target.classList.contains('delete')) {\n      this.setState({\n        card: ''\n      });\n    }\n  }\n\n  scrollStageCard = (num) => {\n    let newNum = num;\n    let stage = this.state.stages.find((stage) => {\n      if (this.state.currentStage === 0 && num === -1) {\n        newNum = this.state.stages.length - 1;\n      } else if (this.state.currentStage === this.state.stages.length - 1 && num === 1) {\n        newNum = -(this.state.stages.length - 1);\n      }\n      return stage.index === this.state.currentStage + newNum;\n    });\n\n    this.setState ({\n      currentStage: this.state.currentStage + newNum,\n      card: stage\n    }); \n  }\n\n  filterByUniverse = (universe) => {\n    let filteredStages;\n\n    if (universe === 'all') {\n      filteredStages = this.state.stageList;\n    } else {\n      filteredStages = this.state.stageList.filter((stage) => {  \n        return stage.universe.name === universe;\n      });\n    }\n    document.querySelector('.search-input').value = '';\n    this.setState({\n      stages: this.setIndex(filteredStages),\n      universe\n    });\n  }\n\n  distillUniverses() {\n    let universes = this.state.stageList.map(stage => stage.universe.name);\n    let filteredUniverses = [];\n\n    universes.forEach((universe) => {\n      if (filteredUniverses.indexOf(universe) === -1) {\n        filteredUniverses.push(universe);\n      }\n    });\n    return filteredUniverses;\n  }\n\n  setIndex(array) {\n    return array.map((stage, i) => {\n      stage.index = i;\n      return stage;\n    });\n  }\n\n  search = (searchInput) => {\n    let filteredStages = this.state.stageList.filter((stage) => {  \n      return stage.name.toUpperCase().includes(searchInput.toUpperCase());\n    });\n\n    document.querySelector('.filter').value = 'All';\n    this.setState({\n      stages: this.setIndex(filteredStages),\n      suggestions: this.trie.suggest(searchInput)\n    });\n  }\n\n  render() {\n    return (\n      <div className='stages-page'>\n        <div className='search-container'>\n          <Search search={this.search}\n            suggestions={this.state.suggestions} />\n          <Filter universes={this.distillUniverses()}\n            filterByUniverse={this.filterByUniverse} />\n        </div>\n        <Universe universe={this.state.universe}/>\n        <section className='stages-body'>\n          {  \n            this.state.stages.map((stage) => {\n              return (\n                <div onClick={e => this.selectStage(e)} \n                  className={`${stage.index} stage-cards`} \n                  key={stage.name} \n                  style={{'backgroundImage': `url(${stage.stage_image})`}}>\n                  <h2 onClick={e => this.selectStage(e)} \n                    className={`${stage.index} stage-name`}>{stage.name}\n                  </h2>\n                </div>\n              );\n            })\n          } \n          <StagesCards  stage={this.state.card} \n            scrollStageCard={this.scrollStageCard}\n            removeCard={this.removeCard} />\n        </section>\n      </div> \n    );\n  }\n}\n\n\n\nexport default Stages;\n\n\n\n\n\n\n  ","import React, { Component } from 'react';\nimport Landing from './Landing';\nimport Characters from './Characters';\nimport Compare from './Compare';\nimport Stages from './Stages';\nimport './styles/main.scss';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Characters: false,\n      Stages: false,\n      Compare: false,\n    };\n    this.keys = Object.keys(this.state);\n  }\n\n  renderSection = (e) => {\n    const section = e.target.classList[0];\n\n    this.setState({\n      Characters: false,\n      Stages: false,\n      Compare: false,\n      [section]: true\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Landing renderCharacters={this.renderSection}/>\n        <header className=\"header\">\n          <img src='./images/universe_icons/flame_smash_bros.svg' \n            className='smash-small' />\n          <div className=\"header-buttons\">\n            <button className='Compare header-button' \n              onClick={this.renderSection}>COMPARE</button>\n            <button className='Stages header-button' \n              onClick={this.renderSection}>STAGES</button>\n            <button className='Characters header-button' \n              onClick={this.renderSection}>CHARACTERS</button>\n          </div>\n        </header>\n        {\n          this.keys.map( key => {\n            if (this.state[key]) {\n              switch (key) {\n              case 'Characters':\n                return <Characters key={key} />;\n              case 'Stages':\n                return <Stages key={key} />;\n              case 'Compare':\n                return <Compare key={key}/>;\n              }\n            }\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}